<%- include('./layouts/header.ejs') %>

    <!-- Your EJS Template -->
    <form class="bg0 p-t-75 p-b-85">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 m-lr-auto m-b-50">
                    <div class="m-l-25 m-r-25 m-lr-0-xl">
                        <div class="wrap-table-shopping-cart">
                            <table class="table-shopping-cart" style="width: 100%; overflow-x: auto;">
                                <tr class="table_head">
                                    <th class="column-1">Image</th>
                                    <th class="column-2 text-center">Product Name</th>
                                    <th class="column-3 text-center">Price</th>
                                    <th class="column-4 text-center">Quantity</th>
                                    <th class="column-5 text-center">Total</th>
                                    <th class="column-6 text-center">Action</th>
                                </tr>
                                <tr class="table_row">
                                    <td class="column-1">
                                        <div class="how-itemcart1">
                                            <img src="/public/adminAssets/assets/images/products/" alt="Product Image">
                                        </div>
                                    </td>
                                    <td class="column-2 text-center"></td>
                                    <td class="column-3 text-center"
                                        style="justify-content: center; align-items: center;"><span
                                            class="product-price"></span></td>
                                    <td class="column-4">
                                        <div class="wrap-num-product flex-w m-l-auto m-r-0">
                                            <div
                                                class="btn-num-product-down fs-16.zmdi.zmdi-plus cl8 hov-btn3 trans-04 flex-c-m">
                                                <i class="fs-16 zmdi zmdi-minus" onclick="updateQuantity('')"></i>
                                            </div>
                                            <input class="mtext-104 cl3 txt-center num-product" type="number"
                                                name="num-product" value="" readonly data-productid="">
                                            <div
                                                class="btn-num-product-up fs-16.zmdi.zmdi-plus cl8 hov-btn3 trans-04 flex-c-m">
                                                <i class="fs-16 zmdi zmdi-plus" onclick="updateQuantity('', 1, '')"></i>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="column-5 text-center">â‚¹<span class="product-total"
                                            data-productid=""></span></td>
                                    <td class="column-6 text-center">
                                        <button class="btn btn-danger remove-from-cart-button" data-product-id=""
                                            data-price="">Remove</button>
                                    </td>
                                </tr>
                                <tr class="table_row">
                                    <td class="column-1" colspan="6">
                                        <h1>Your Cart is Empty</h1>
                                        <p>Add items to your cart to see them here.</p>
                                    </td>
                                </tr>
                            </table>


                        </div>
                        <div class="flex-w flex-sb-m bor15 p-t-18 p-b-15 p-lr-40 p-lr-15-sm">
                            <div class="flex-w flex-m m-r-20 m-tb-5">
                                <input class="stext-104 cl2 plh4 size-117 bor13 p-lr-20 m-r-10 m-tb-5" type="text"
                                    name="coupon" placeholder="Coupon Code">
                                <div
                                    class="flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5">
                                    Apply coupon
                                </div>
                            </div>
                            <div class="flex-c-m stext-101 cl2 size-119 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-10"
                                onclick="updateCart()">
                                Update Cart
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 m-lr-auto m-b-50">
                    <div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-r-63 m-lr-0-xl p-lr-15-sm">
                        <h4 class="mtext-109 cl2 p-b-30">
                            Cart Totals
                        </h4>
                        <div class="flex-w flex-t bor12 p-b-13">
                            <div class="size-208">
                                <span class="stext-110 cl2">
                                    Subtotal:
                                </span>
                            </div>
                            <div class="size-209" id="totalPrice">
                                <span class="mtext-110 cl2"></span>
                            </div>
                        </div>
                        <div class="flex-w flex-t p-t-27 p-b-33">
                            <div class="size-208">
                                <span class="mtext-101 cl2">
                                    Total:
                                </span>
                            </div>
                            <div class="size-209 p-t-1" id="cartPrice">
                                <span class="mtext-110 cl2"></span>
                            </div>
                        </div>
                        <button class="flex-c-m stext-101 cl0 size-116 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer"><a
                                href="/checkout0" style="color: aliceblue;">
                                Proceed to Checkout</a>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"></script>

    <script>
        const debouncedUpdateQuantity = _.debounce(updateQuantity, 5);

        function updateQuantity(productId, change, index) {
            const quantityInput = document.querySelector(`[name="num-product${productId}"]`);
            const updateButton = document.querySelector(`.fs-16.zmdi.zmdi-plus[onclick="updateQuantity('${productId}', 1, '${index}')"]`);
            const productTotalElement = document.querySelector(`.product-total[data-productid="${productId}"]`);

            quantityInput.disabled = true;
            updateButton.disabled = true;

            fetch(`/update_quantity/${productId}/${change}`, {
                method: 'PATCH',
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        productTotalElement.textContent = `${data.cart.items[index].total}`;
                        const totalPriceElement = document.getElementById('totalPrice');
                        totalPriceElement.textContent = `${data.cart.totalPrice}`;
                    } else {
                        Swal.fire(data.message);
                    }
                })
                .catch(error => {
                    console.error(error);
                    Swal.fire('An error occurred while updating the quantity.');
                })
                .finally(() => {
                    quantityInput.disabled = false;
                    updateButton.disabled = false;
                });
        }

        function updateCart() {
            fetch('/update_cart', {
                method: 'PATCH',
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const totalPriceElement = document.getElementById('cartPrice');
                        totalPriceElement.textContent = data.cart.totalPrice;
                    } else {
                        Swal.fire(data.message);
                    }
                })
                .catch(error => {
                    console.error(error);
                    Swal.fire('An error occurred while updating the cart.');
                });
        }
    </script>

    <script>

        document.querySelectorAll('.remove-from-cart-button').forEach(button => {
            button.addEventListener('click', async (event) => {
                event.preventDefault(); // Prevent the default behavior (page navigation)

                const productId = event.target.getAttribute('data-product-id');
                const price = event.target.getAttribute('data-price');
                const rowToRemove = event.target.closest('.table_row'); // Find the row to remove

                try {
                    const response = await fetch(`/cart_remove?id=${productId}&price=${price}`, {
                        method: 'GET'
                    });

                    if (response.ok) {
                        // Item removed successfully, remove the row from the cart UI
                        rowToRemove.remove();
                        Swal.fire("Item removed from cart") // Remove the row from the cart table
                        // You can also update the total price in the UI if needed
                    } else {
                        // Handle errors or display a message to the user
                        const data = await response.json();
                        console.log('Error: ' + data.message);
                    }
                } catch (error) {
                    // Handle fetch errors
                    console.log('Error: ' + error.message);
                }
            });
        });
    </script>




    <%- include('./layouts/footer.ejs') %>





       


             
    </div>
    <!-- <div class="flex-w flex-sb-m bor15 p-t-18 p-b-15 p-lr-40 p-lr-15-sm">
        <div class="flex-w flex-m m-r-20 m-tb-5">
            <input class="stext-104 cl2 plh4 size-117 bor13 p-lr-20 m-r-10 m-tb-5" type="text" name="coupon" placeholder="Coupon Code">
            <div class="flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5">
                Apply coupon
            </div>
        </div>
        <div class="flex-c-m stext-101 cl2 size-119 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-10" onclick="updateCart()">
            Update Cart
        </div>
    </div> -->
</div>
</div>
</div>
<div class="row">
<div class="col-lg-12 m-lr-auto m-b-50">
<div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-r-63 m-lr-0-xl p-lr-15-sm">
    <h4 class="mtext-109 cl2 p-b-30">
        Cart Totals
    </h4>
    <div class="flex-w flex-t bor12 p-b-13">
        <div class="size-208">
            <span class="stext-110 cl2">
                Subtotal:
            </span>
        </div>
        <div class="size-209" id="totalPrice">
            <span class="mtext-110 cl2"></span>
        </div>
    </div>
    <div class="flex-w flex-t p-t-27 p-b-33">
        <div class="size-208">
            <span class="mtext-101 cl2">
                Total:
            </span>
        </div>
        <div class="size-209 p-t-1" id="cartPrice">
            <span class="mtext-110 cl2"></span>
        </div>
    </div>
    <button  class="flex-c-m stext-101 cl0 size-116 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer"><a href="/checkout" style="color: aliceblue;">
        Proceed to Checkout</a>
    </button>
</div>
</div>
</div>
</div>
</form>




<!-- checkout page virgin -->

<%- include('./layouts/header.ejs') %>
    <style>
        /* .payment-option {
            background-color: #f3f3f9;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 10px;
            cursor: pointer;
        }

        .selected-payment {
            background-color: #429cfd;
            color: #fff;
        } */

        /* Example custom CSS for the modal */
        /* .modal-content {
            background-color: #e7e7e7;
            border: 2px solid #444444;
        }

        .modal-title {
            color: #007BFF;
        }

        .modal-body {
            padding: 20px;
        }

        .btn-primary {
            background-color: #007BFF;
            color: #fff;
        } */

        /* to highlight the address */
        /* .highlighted-address {
            border: 2px solid #007bff;
            /* You can change the border style to match your design */
            /* background-color: #f0f8ff; */
            /* You can change the background color to match your design */
        /* } */
    </style>

    <form action="/checkout" method="post">
        <div class="site-wrap m-t-75 bg0">

            <div class="bg-light py-3">
                <div class="container">
                    <div class="row">
                        <div class="col-md-12 mb-0">
                            <a href="/">Home</a> <span class="mx-2 mb-0">/</span> <a href="/cart">Cart</a>
                            <span class="mx-2 mb-0">/</span> <strong class="text-black">Checkout</strong>
                        </div>
                    </div>
                </div>
            </div>

            <div class="site-section" style="padding-top: 40px">
                <div class="container">
                    <div class="row">

                        <!-- main two -->

                        <div class="col-md-6 mb-5 mb-md-0">
                            <h2 class="h3 mb-3 text-black">Billing Details</h2>
                            <div class="row">
                                <div class="col-md-12 col-12">
                                    <p>Choose One Address</p>
                                </div>
                                <% if (address) { %>
                                    <% for (let i=0; i < address.address.length; i++) { %>



                                        <div class="col-md-6 col-12 mb-3 mt-3 address-options"
                                            id="address-card-<%= address.address[i]._id %>">
                                            <div class="card p-2" style="background: #f3f3f9; border-radius: 10px">
                                                <div class="card-body">
                                                    <h6 class="card-title data-full-name " style="font-size: 15px">
                                                        Name:
                                                        <%= address.address[i].fullName %>
                                                    </h6>
                                                    <p class="card-text  data-mobile">Number: <%=
                                                            address.address[i].mobile %>
                                                    </p>
                                                    <p class="card-text  data-district">District: <%=
                                                            address.address[i].district %>
                                                    </p>
                                                    <p class="card-text  data-city">City:<%= address.address[i].city %>
                                                    </p>
                                                    <p class="card-text  data-state">State: <%= address.address[i].state
                                                            %>
                                                    </p>
                                                    <p class="card-text">Pincode: <%= address.address[i].pincode %>
                                                    </p>

                                                    <!-- <hr class="my-3" /> -->

                                                    <!-- <div class="d-flex justify-content-between">
                                                    <button class="btn btn-outline-primary-2 edit-address-btn"
                                                        type="button" data-bs-toggle="modal"
                                                        data-bs-target="#editAddressModal"
                                                        data-address-id="<%= address.address[i]._id %>">
                                                        Edit
                                                    </button>
                                                    

                                                    <a onclick="removeAddress('<%=address.address[i]._id%>')">
                                                        <button class="btn btn-outline-primary-2" type="button"
                                                            data-bs-toggle="modal" data-bs-target="">
                                                            Remove
                                                        </button>
                                                    </a>
                                                </div> -->

                                                </div>
                                                <input type="radio" name="addressOption"
                                                value="<%= address.address[i]._id %>" required>
                                            </div>


                                        </div>

                                        <% } %>
                                            <% } else { %>
                                                <% } %>
                            </div>

                            <div>
                                <a href="/address">
                                    <button type="submit" class="btn btn-primary btn-sm">Add Another Address</button>
                                </a>
                            </div>

                            <br>

                            <!-- <div class="form-group">
                            <label for="c_order_notes" class="text-black">Order Notes</label>
                            <textarea name="c_order_notes" id="c_order_notes" cols="30" rows="5" class="form-control"
                                placeholder="Write your notes here..."></textarea>
                        </div> -->

                        </div>

                        <!-- main two -->

                        <div class="col-md-6">
                            <div class="row mb-5">
                                <div class="col-md-12">
                                    <h2 class="h3 mb-3 text-black">Coupon Code</h2>
                                    <div class="p-3 p-lg-5 border">
                                        <label for="c_code" class="text-black mb-3">Enter your coupon code if you have
                                            one</label>
                                        <div class="input-group w-75">
                                            <input type="text" class="form-control" id="c_code"
                                                placeholder="Coupon Code" aria-label="Coupon Code"
                                                aria-describedby="button-addon2" />
                                            <div class="input-group-append">
                                                <button class="btn btn-primary btn-sm" type="button" id="button-addon2">
                                                    Apply
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-5">
                                <div class="col-md-12">
                                    <h2 class="h3 mb-3 text-black">Your Order</h2>
                                    <div class="p-3 p-lg-5 border">
                                        <table class="table site-block-order-table mb-5">
                                            <thead>
                                                <th>Product</th>
                                                <th>Image</th>
                                                <th>Quantity</th>
                                                <th>Price</th>
                                            </thead>
                                            <tbody>
                                                <% if (cart && cart.items && cart.items.length> 0) { %>
                                                    <% cart.items.forEach((item)=> { %>
                                                        <tr>

                                                            <td>
                                                                <div class="d-flex align-items-center">
                                                                    <div class="product-details">
                                                                        <h6 class="product-title">
                                                                            <%= item.productId.productName %>
                                                                        </h6>
                                                                    </div>
                                                                </div>
                                                            </td>

                                                            <td>
                                                                <img src="/car/adminAssets/assets/images/products/<%= item.productId.productImage?.[0] %>"
                                                                    alt="ProductImage"
                                                                    style="max-width: 5rem; max-height: 5rem" />
                                                            </td>

                                                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<%= item.quantity %>
                                                            </td>

                                                            <td>â‚¹ <%= (item.productId.productPrice *
                                                                    item.quantity).toFixed(2) %>
                                                            </td>

                                                        </tr>
                                                        <% }); %>
                                                            <% } else { %>
                                                                <tr>
                                                                    <td colspan="4">Your cart is empty.</td>
                                                                </tr>
                                                                <% } %>
                                            </tbody>
                                        </table>


                                        <!-- edit modal -->


                                        <!-- <div class="modal fade" id="editAddressModal" tabindex="-1"
                                        aria-labelledby="editAddressModalLabel" aria-hidden="true">
                                        <div class="modal-dialog modal-lg">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="editAddressModalLabel">Edit Address
                                                    </h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                                        aria-label="Close"></button>
                                                </div>
                                                <div class="modal-body">


                                                    <input type="hidden" id="addressId">
                                                    <div class="mb-3">
                                                        <label for="editFullName" class="form-label">Full
                                                            Name</label>
                                                        <input type="text" class="form-control" id="editFullName"
                                                            name="editFullName" required>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label for="editMobile" class="form-label">Mobile
                                                            Number</label>
                                                        <input type="tel" class="form-control" id="editMobile"
                                                            name="editMobile" required>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label for="editState" class="form-label">State</label>
                                                        <input type="text" class="form-control" id="editState"
                                                            name="editState" required>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label for="editDistrict" class="form-label">District</label>
                                                        <input type="text" class="form-control" id="editDistrict"
                                                            name="editDistrict" required>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label for="editCity" class="form-label">City</label>
                                                        <input type="text" class="form-control" id="editCity"
                                                            name="editCity" required>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label for="editPincode" class="form-label">Pincode</label>
                                                        <input type="text" class="form-control" id="editPincode"
                                                            name="editPincode" required>
                                                    </div>
                                                    <button type="button" class="btn btn-primary"
                                                        onclick="saveChanges()">Save Changes</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div> -->










                                        <!-- <div class="mb-3 text-center ">
                                        <button class="btn payment-option" data-payment="cash-on-delivery">Cash On
                                            Delivery</button>
                                    </div>

                                    <div class="mb-3 text-center ">
                                        <button class="btn payment-option" data-payment="cheque-payment">Cheque
                                            Payment</button>
                                    </div>

                                    <div class="mb-3 text-center ">
                                        <button class="btn payment-option" data-payment="paypal">Paypal</button>
                                    </div> -->




                                        <div class="payment-options">
                                            <h2>Select Payment Option</h2>
                                            <label>
                                                <input type="radio" name="paymentOption" value="COD" required> Cash On
                                                Delivery
                                            </label>
                                            <br>
                                            <label>
                                                <input type="radio" name="paymentOption" value="Other" required> Cheque
                                                Payment
                                            </label>
                                            <br>
                                            <label>
                                                <input type="radio" name="paymentOption" value="PayPal" required> Paypal
                                            </label>
                                        </div>




                                        <div class="form-group">
                                            <button type="submit" class="btn btn-primary btn-lg py-3 btn-block">
                                                Place Order
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <!-- <script>
        // Store the currently selected address ID
        let selectedAddressId = null;

        // Get all the address cards
        const addressCards = document.querySelectorAll('.address-card2');

        // Attach a click event listener to each address card
        addressCards.forEach(card => {
            card.addEventListener('click', function () {
                const addressId = this.id.split('-')[2];

                // Clear the highlight from the previously selected address
                if (selectedAddressId) {
                    const previousSelectedCard = document.getElementById(`address-card-${selectedAddressId}`);
                    if (previousSelectedCard) {
                        previousSelectedCard.classList.remove('highlighted-address');
                    }
                }

                // Highlight the selected address
                this.classList.add('highlighted-address');

                // Update the selected address ID
                selectedAddressId = addressId;
            });
        });
    </script> -->




    <!-- payment button selection indicator -->
    <!-- <script>
        // Get all payment buttons
        const paymentButtons = document.querySelectorAll(".payment-option");

        // Add click event listeners to each button
        paymentButtons.forEach(button => {
            button.addEventListener("click", () => {
                // Remove the selected class from all buttons
                paymentButtons.forEach(btn => {
                    btn.classList.remove("selected-payment");
                });

                // Add the selected class to the clicked button
                button.classList.add("selected-payment");

                // Handle the selection here, e.g., store the selected payment method in a variable
                const selectedPayment = button.getAttribute("data-payment");
                console.log(`Selected Payment: ${selectedPayment}`);
            });
        });
    </script> -->


    <!-- <script>
        function removeAddress(addressId) {
            // Remove the address card from the DOM
            const addressCard = document.getElementById(`address-card-${addressId}`);
            if (addressCard) {
                addressCard.remove();
            }
        }
    </script> -->

    <!-- Event listener for Edit button click -->

    <!-- <script>
        document.addEventListener("DOMContentLoaded", function () {
            const editAddressButtons = document.querySelectorAll(".edit-address-btn");

            editAddressButtons.forEach((button) => {
                button.addEventListener("click", function () {
                    const addressId = button.getAttribute("data-address-id");
                    const fullName = button.getAttribute("data-full-name");
                    const mobile = button.getAttribute("data-mobile");
                    const state = button.getAttribute("data-state");
                    const district = button.getAttribute("data-district");
                    const city = button.getAttribute("data-city");
                    const pincode = button.getAttribute("data-pincode");

                    // Set default values for modal fields
                    document.getElementById("addressId").value = addressId;
                    document.getElementById("editFullName").value = fullName;
                    document.getElementById("editMobile").value = mobile;
                    document.getElementById("editState").value = state;
                    document.getElementById("editDistrict").value = district;
                    document.getElementById("editCity").value = city;
                    document.getElementById("editPincode").value = pincode;

                    // Show the modal
                    const editAddressModal = new bootstrap.Modal(document.getElementById("editAddressModal"));
                    editAddressModal.show();
                });
            });
        });

        function saveChanges() {
            // Retrieve values from modal fields
            const addressId = document.getElementById("addressId").value;
            const fullName = document.getElementById("editFullName").value;
            const mobile = document.getElementById("editMobile").value;
            const state = document.getElementById("editState").value;
            const district = document.getElementById("editDistrict").value;
            const city = document.getElementById("editCity").value;
            const pincode = document.getElementById("editPincode").value;

            // Prepare the data to be sent in the request body
            const data = {
                addressId: addressId,
                fullName: fullName,
                mobile: mobile,
                state: state,
                district: district,
                city: city,
                pincode: pincode
            };

            // Perform an AJAX POST request to save changes
            fetch("/your-save-endpoint", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
            })
                .then(response => response.json())
                .then(data => {
                    // Check the response from the server-side logic
                    // If the changes are saved successfully, you can handle it here
                    // For example, close the modal and update the UI if needed
                    if (data.success) {
                        const editAddressModal = new bootstrap.Modal(document.getElementById("editAddressModal"));
                        editAddressModal.hide();
                        // Perform additional actions if necessary, such as updating the UI
                    } else {
                        // Handle error scenarios if changes couldn't be saved
                        console.error("Failed to save changes.");
                    }
                })
                .catch(error => {
                    // Handle network errors or other exceptions
                    console.error("Error occurred while saving changes:", error);
                });
        }


    </script> -->


    <%- include('./layouts/footer.ejs') %>

<!-- checkout page virgin -->



<!-- old edit product controller -->
<script>
editProduct: async (req, res) => {
    try {
        const { id, productName, productDescription, productCategory, productStock, productPrice, productBrand } = req.body;
        const productImage = []
        for (let i = 0; i < req.files.length; i++) {
            productImage[i] = req.files[i].filename
        }
        await Product.findByIdAndUpdate(id, {
            $set: { productName, productDescription, productCategory, productImage, productStock, productPrice, productBrand }
        });
        res.redirect('/admin/viewProduct');
    } catch (error) {
        console.log(error.message);
    }
}
</script>
<!-- old edit product controller -->




<!-- remove product function -->
<script>

function removeProduct(proId) {
    // Display a confirmation dialog
    Swal.fire({
      title: 'Are you sure?',
      text: 'You won\'t be able to revert this!',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, remove it!'
    }).then((result) => {
      // Check if the user confirmed the action
      if (result.isConfirmed) {
        // User confirmed, proceed with removal
        $.ajax({
          url: '/remove-product',
          method: 'post',
          encoded: true,
          data: {
            product: proId,
          },
        }).done((data) => {
          if (data.success) {
            // Remove the corresponding row from the table
            const rowToRemove = document.querySelector(`.cart-item[data-product-id="${proId}"]`);
            if (rowToRemove) {
              rowToRemove.remove();
            }
  
            // Update the total on the page
            updateTotal();
  
            // Check if the cart is empty and display the empty cart message
            const cartItems = document.querySelectorAll('.cart-item');
            const emptyCartMessage = document.querySelector('.empty-cart-message');
  
            if (cartItems.length === 0) {
              // If there are no cart items, hide both the tbody and thead
              const tbody = document.querySelector('tbody');
              const thead = document.querySelector('thead');
              if (tbody) {
                tbody.style.display = 'none';
              }
              if (thead) {
                thead.style.display = 'none';
              }
  
              // Display the empty cart message
              if (emptyCartMessage) {
                emptyCartMessage.style.display = 'block';
              }
            }
  
            // Optionally, update other UI elements or take additional actions
            Swal.fire(
              'Removed!',
              'Your product has been removed.',
              'success'
            );
          } else {
            // Handle unsuccessful removal
            Swal.fire(
              'Error!',
              'Failed to remove the product.',
              'error'
            );
          }
        });
      }
      // If the user clicked "Cancel", do nothing
    });
  }

    </script>
<!-- remove product function -->


<table class="cart-items table" cellspacing="0">
    <thead>
        <tr>
            <th class="product-thumbnail">Product</th>
            <th class="product-price">Price</th>
            <th class="product-quantity">Quantity</th>
            <th class="product-subtotal">Subtotal</th>
            <th class="product-remove">&nbsp;</th>
        </tr>
    </thead>

    <tbody>

        <% if (cart && cart.length> 0) { %>
            <% cart.forEach((data, index)=> { %>

                <tr class="cart-item <%= data.quantity > data.productId.productStock ? 'out-of-stock' : '' %>"
                    data-product-id="<%=data.productId._id%>">
                    <td class="product-thumbnail">
                        <a href="shop-details.html">
                            <img src="/car/adminAssets/assets/images/products/<%=data.productId.productImage[0]%>"
                                alt="IMG">
                        </a>
                        <div class="product-name">
                            <%=data.productId.productName%>
                        </div>
                    </td>
                    <td class="product-price">
                        <%=data.productId.productPrice%>
                    </td>
                    <td class="product-quantity">
                        <div class="quantity">
                            <div class="column-4">
                                <a class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m btn"
                                    onclick="cartCount('<%=data.productId._id%>','<%=userId%>',-1)">-</a>
                                <span class="mtext-104 cl3 txt-center num-product p-2"
                                    id="<%=data.productId._id%>"
                                    data-price="<%=data.productId.productPrice%>">
                                    <%=data.quantity%>
                                </span>
                                <a class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m btn "
                                    onclick="cartCount('<%=data.productId._id%>','<%=userId%>', 1)">+</a>
                            </div>
                        </div>
                    </td>
                    <td class="product-subtotal" id="subtotal-<%=data.productId._id%>"
                        data-price="<%=data.productId.productPrice%>">
                        <span>&#8377; <span id="subtotal-<%=data.productId._id%>">
                                <%= (parseFloat(data.productId.productPrice) *
                                    data.quantity).toFixed(2) %>
                            </span></span>
                    </td>
                    <td><a href=""
                            onclick="removeProduct('<%=data.productId._id%>'); return false;"
                            style="color: red;">remove</a></td>
                </tr>


                <% if (data.quantity> data.productId.productStock) { %>
                    <tr class="out-of-stock-message">
                        <td colspan="5">
                            <p class="text-danger">Out of stock: <%=
                                    data.productId.productName %>
                            </p>
                        </td>
                    </tr>
                    <% } %>
                        <% }) %>
                            <% } else { %>
                                <tr>
                                    <td></td>
                                    <td></td>
                                    <td colspan="5" style="color: red;">Cart is empty</td>




                                </tr>
                                <% } %>
    </tbody>

    <div class="empty-cart-message" style="display: none; text-align: center;">
        <p style="color: red;">Your cart is empty. Start shopping now!</p>

        <a href='/productView'
            style="background-color: rgb(17, 15, 15); color: rgb(227, 226, 226); padding: 10px 20px; border: none; cursor: pointer;">Continue
            Shopping</a>
    </div>
</table>


<!-- placeOrder -->
<script>
placeOrder: async (req, res) => {
    try {
        // Get the user's ID from the authenticated user (assuming you have implemented user authentication)
        const userId = req.session.userId;

        // Retrieve the selected address ID from the request body
        const selectedAddressId = req.body.addressOption;

        // Get the user's cart data (assuming you have a cart system implemented)
        const cart = await Cart.findOne({ userId: userId }).populate('items.productId');

        // Calculate the total order amount based on the cart contents
        let totalAmount = 0;
        for (const item of cart.items) {
            totalAmount += item.productId.productPrice * item.quantity;
        }

        // Create the order document
        const order = new Order({
            user: userId,
            cart: {
                user: userId,
                products: cart.items,
            },
            deliveryAddress: selectedAddressId,
            paymentOption: req.body.paymentOption, // Get the selected payment option from the request
            totalAmount: totalAmount,
        });

        // Save the order to the database
        await order.save();

        // Clear the user's cart (you should implement a cart clearing mechanism)
        // For example, you can update the user's cart in the User model or a dedicated Cart model

        // Update the user's order history (you should implement this as needed)

        // Respond with a success message
        res.redirect('/thankyou')
    } catch (error) {
        console.log(error.message);
    }
}
</script>
<!-- placeOrder -->





 <!-- MY ORDERS -->

 
 <div class="tab-pane fade" id="tab-order" role="tabpanel"
 aria-labelledby="tab-order-link">
 <!-- <div class="row mx-auto"> -->
 <div class="card col-md-5 col-10 m-2 shadow-sm" id="allorder"
     style="border-radius: 7px; background: #F3F3F9; cursor: pointer;">
     <div class="card-body">
         <div class="d-flex justify-content-center mt-1 py-4">
             <i class="fa-solid fa-box-open mx-3" style="font-size: 35px;"></i>
             <h5 class="m-0 align-self-center" style="font-weight: 300;">All Orders
             </h5>
         </div>
     </div>
 </div>

</div>

 <!-- MY ORDERS -->


  <!-- MY ORDERS -->
  <div class="tab-pane fade" id="tab-order" role="tabpanel"
  aria-labelledby="tab-order-link">
  <h6 class="text-center fs-1 font-monospace text-decoration-underline">My Orders</h6>

  <table class="table table-bordered">
      <thead>
          <tr>
              <th>Order ID</th>
              <th>Order Date</th>
              <th>Total Amount</th>
              <th>Status</th>
          </tr>
      </thead>
      <tbody>
          <!-- Loop through your orders and generate table rows -->
          <% if (orders && orders.length> 0) { %>
              <% orders.forEach(order=> { %>
                  <tr>
                      <td>
                          <%= order.orderId %>
                      </td>
                      <td>
                          <%= order.orderDate %>
                      </td>
                      <td>
                          <%= order.totalAmount %>
                      </td>
                      <td>
                          <%= order.status %>
                      </td>
                  </tr>
                  <% }); %>
                      <% } else { %>
                          <tr>
                              <td colspan="4">No orders found.</td>
                          </tr>
                          <% } %>
      </tbody>
  </table>
</div>
